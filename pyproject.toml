[tool.poetry]
name = "ws-python"
version = "0.1.0"
description = ""
authors = ["John Doe <info@example.com>"]
readme = "README.md"
packages = [{include = "ws_python"}]

[tool.poetry.dependencies]
python = "^3.11"


[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
ruff = "^0.0.270"
pytest = "^7.3.1"
pytest-cov = "^4.1.0"
poethepoet = "^0.20.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 200

[tool.black]
line-length = 200


[tool.coverage.xml]
output = ".pytest_cache/coverage.xml"

[tool.coverage.run]
branch = true
source = ["mymodule", "tests"]
omit = ["tests/fixtures/*"]
data_file = ".pytest_cache/.coverage"

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "def __str__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "if typing.TYPE_CHECKING:",
]


[tool.poe.tasks]
lint = "ruff check mymodule"
test = "pytest"
cover = "pytest --cov=mymodule --cov-report xml"
fmt = "black mymodule --check"
build = ["fmt", "lint", "test"]